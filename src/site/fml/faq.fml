<?xml version="1.0" encoding="UTF-8"?>
<faqs title="Frequently Asked Questions">
  <part id="General">
    <faq id="yui">
      <question>Can you tell me more about YUI integration ?</question>
      <answer>
        <p>
          Exanpe library includes YUI 2 JavaScript modules as basis for almost all components.<br/>
          The current version of YUI embedded is 2.9.0.<br/>
          The YUI resources are automatically loaded through @Import over the components classes.<br/>
           Obviously, only the components required resources are loaded, not all YUI.<br/><br/>
           Regardless the embedding of the JavaScript framework, Exanpe provides a way to include your own YUI2 distribution. 
           This can be really easily set up by contributing the symbol <b>ExanpeSymbols.YUI2_BASE</b> in your Module class.<br/>
           The requirement is that you own a YUI distribution packaged as standards, containing all the Exanpe dependencies.<br/>.
           <source>
           public static void contributeApplicationDefaults(MappedConfiguration&lt;String, String&gt; configuration)
   		        configuration.add(ExanpeSymbols.YUI2_BASE, "context:/js/yui/mydistrib/");
   		   </source>  
   		   With that overriding, Exanpe library will expect to find a file <b>context:/js/yui/mydistrib/animation/animation-min.js</b> in your application.
   		   <br/>
   		   Here are the YUI dependencies :
   		   <ul>
   		   	  <li><b>animation</b>-min</li>
   		   	  <li><b>button</b>-min</li>
   		   	  <li><b>carousel</b>-min</li>
   		   	  <li><b>colorpicker</b>-min</li>
   		   	  <li><b>connection</b>-min</li>
   		   	  <li><b>container</b>-min</li>
   		   	  <li><b>dragdrop</b>-min</li>
   		   	  <li><b>element</b>-min</li>
   		   	  <li><b>json</b>-min</li>
   		   	  <li><b>slider</b>-min</li>
   		   	  <li><b>utilities</b></li>
   		   	  <li><b>yahoo-dom-event</b></li>   		   	  
   		   </ul>
        </p>
      </answer>
    </faq>
    <faq id="ie6">
      <question>Why no Internet Explorer 6 support ?</question>
      <answer>
        <p>
         	Internet Explorer 6 is now a 10 year old browser, and not the best one.<br/>
         	It is such a mess and causes so much pain that, as for Internet Explorer 5.5 and previous versions, we have not tested the components and would be scared to see the result.<br/>
   			Sorry, move on !
        </p>
      </answer>
    </faq>
    <faq id="cssskin">
      <question>Where can I find the CSS file to help me customizing the library?</question>
      <answer>
        <p>
         	You can download the CSS skin file, with comments, <a href="data/exanpe-t5-lib-skin.css">here</a>.
        </p>
      </answer>
    </faq>
    <faq id="demoslow">
      <question>Why is the demo access so slow?</question>
      <answer>
        <p>
         	Our demo is hosted by Google App Engine (GAE). We are limited by daily quotas and instances restrictions.<br/>
         	A way for you to test it easily would be to have a look at our examples sources (@see github <a href="https://github.com/exanpe/exanpe-t5-demo">exanpe-t5-demo</a> project) 
         	and test them anywhere or download the war file <a href="https://github.com/downloads/exanpe/exanpe-t5-demo/exanpe-t5-demo.war">here</a>.<br/>
         	We apologize for any inconvenience about this but we do not own a J2EE server on the web. Contact us for any offer :)
        </p>
      </answer>
    </faq>
    <faq id="events">
      <question>How can I bind some custom JavaScript code on components event?</question>
      <answer>
        <p>
         	Some components provide JavaScript events that you can bind on in order to customize the component behavior (see the JsDoc, events are marked @event and named afterXXX/beforeXXX/onXXX).<br/>
         	Overriding the event is really simple:<br/>
         	- To override a single component instance, add the following code below the component declaration:<br/>
         	<source>
  YAHOO.util.Event.onDOMReady(function(){
    ${componentId}.${eventFunction} = function(){
      //write your code here !
    }
  });
   		   </source>
   		   - To override for all the components in your application, add the following code into a JavaScript file imported after the exanpe-t5-lib.js:<br/>
         	<source>
  Exanpe.${componentName}.prototype.${eventFunction} = function(){
    //write your code here !
  }
   		   </source>  
   		   <br/><br/>
   		   Example : 
   		   <source>
<![CDATA[ 
  <t:select t:mixins="exanpe/selectLoader" t:id="country" 
            t:targetId="city"  model="country" value="countryValue" encoder="countryEncoder"/>
   		   		
    YAHOO.util.Event.onDOMReady(function(){
      country.afterUpdateSuccess = function(){
        YAHOO.util.Dom.get("type").options.length = 0;
      }
    });
]]>
   		   </source>
        </p>
      </answer>
    </faq>
    <faq id="tld">
      <question>Do you offer the TLD related to the library?</question>
      <answer>
        <p>
         	Yes, the TLD that might help you to develop in Eclipse is available <a href="exanpe-t5-lib-1.1.0.tld">here</a>.<br/>
         	Check <a href="http://wiki.apache.org/tapestry/Tapestry5JSPEditorEclipse" target="_blank">this link</a> for explanation on how to use it.
        </p>
      </answer>
    </faq>
  </part>
</faqs>
