<?xml version="1.0" encoding="UTF-8" ?>
<!-- Generated by tapestry-tldgen - http://exanpe.free.fr/tapestry-tldgen/ -->
<taglib xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd" version="2.1">
  <tlib-version>1.2.0</tlib-version>
  <short-name>ex</short-name>
  <uri>http://exanpe.github.com/exanpe-t5-lib/</uri>
  <tag>
    <description>Color Picker component.
 This component provides the selection of a color inside a popup, and displays the value into a
 read only input field.
 Has to be enclosed inside a t:form.
 Coercion have been defined to allow the value attribute to be bound to a java.awt.Color type
 attribute in your Page.
 JavaScript : This component is bound to a class Exanpe.ColorPicker.
 CSS : This component is bound to a class exanpe-cpk.</description>
    <name>colorpicker</name>
    <tag-class>fr.exanpe.t5.lib.components.ColorPicker</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Define the name of the value to set the color in the container. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>value</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Define the text to close the component. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : message
</description>
      <name>closeText</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Define the icon to open the color picker. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>icon</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component displays its body/block according to authorizations rules declared.
 All rules will be applied if provided. If one fails, the body/block won&apos;t be rendered.
 any/all/not must be filled with comma separated roles, as set into your session principal.
 For easier maintenance, we advise you to fill only one of any/all/not parameter.</description>
    <name>authorize</name>
    <tag-class>fr.exanpe.t5.lib.components.Authorize</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Block to render authorization. If not provided, the body of the component is rendered. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>block</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Block</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Comma separated role values
 None of these roles are required to allow rendering (if one is present in the session, no
 rendering) &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>not</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Comma separated role values
 All of these roles are required to allow rendering &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>all</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Comma separated role values
 Any of these roles are required to allow rendering &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>any</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component represents a point used to draw Polylines or Polygons into a Google Map.
 It must be nested inside a fr.exanpe.t5.lib.components.GMap component.</description>
    <name>gmappolypoint</name>
    <tag-class>fr.exanpe.t5.lib.components.GMapPolyPoint</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The longitude position of the point &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>longitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The latitude position of the point &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>latitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>Menu component.
 Items must be provided as body of this component.
 JavaScript : This component is bound to a class Exanpe.Menu.
 CSS : This component is bound to a class exanpe-menu.
 This component wraps a YUI Menu component.
 This component must be opened and closed through its JavaScript API.</description>
    <name>menu</name>
    <tag-class>fr.exanpe.t5.lib.components.Menu</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines an HTML id where the menu should be opened next to.
 The top left corner of the menu will be bound to the bottom right html element provided. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>targetHtmlId</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component displays some items as a slide show view.
 Must contains some fr.exanpe.t5.lib.components.SlideShowItem components in its body.
 JavaScript : This component is bound to a class Exanpe.SlideShow.
 CSS : This component is bound to a class exanpe-sls.</description>
    <name>slideshow</name>
    <tag-class>fr.exanpe.t5.lib.components.SlideShow</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines whether this slide show is circular. Circular means that once displayed, the content
 goes back to the begining. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>circular</name>
      <required>false</required>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the height, in pixels, of items in the slideShow &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>itemHeight</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the number of visible elements in this slide show. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>numVisible</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the auto play behavior of the component by setting a milliseconds interval. 0 means
 no autoplay. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>autoPlayMillis</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>AccordionItem component. Must be nested inside a Accordion component.
 Initialized either by setting its content and title or by defining an id processed in the
 container resources file.
 If initialized through a resources file (.properties), the following key patterns will be
 automatically checked :
 
 ${id}-title
 ${id}-content
 
 
 The content may also be the body of this item.</description>
    <name>accordionitem</name>
    <tag-class>fr.exanpe.t5.lib.components.AccordionItem</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The default state of the item. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>opened</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The title of the item. May be initialized through a resource file. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The content of the item. May be initialized through a resource file. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>content</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>Item displayed inside a fr.exanpe.t5.lib.components.SlideShow.
 The content of this item can be either an image with its associated title or the body of the
 component.</description>
    <name>slideshowitem</name>
    <tag-class>fr.exanpe.t5.lib.components.SlideShowItem</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Image displayed as part of the item &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>image</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Title of the image displayed as part of the item &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>The list sorter allow you to sort some elements displayed into a vertical list.
 Technically, it works with a basic loop enriched.
 The body of the component will be the render of the list.
 The list given as parameter will be directly modified by the component.
 The component HAS to be nested into a org.apache.tapestry5.corelib.components.Form component, its modification can be submitted
 as any form component.</description>
    <name>listsorter</name>
    <tag-class>fr.exanpe.t5.lib.components.ListSorter</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Value to iterate over. Mainly used to bind to a property of the page, then design the list
 content. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>value</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Source list parameter. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : prop
</description>
      <name>source</name>
      <required>true</required>
      <deferred-value>
        <type>java.util.List</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Whether to use a default skin for the list sorter. True by default. Turn to false to design
 each element your own way. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>useDefaultSkin</name>
      <required>true</required>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>MenuBar component.
 Items must be provided as body of this component.
 JavaScript : This component is bound to a class Exanpe.MenuBar.
 CSS : This component is bound to a class exanpe-menu.
 This component wraps a YUI MenuBar component.</description>
    <name>menubar</name>
    <tag-class>fr.exanpe.t5.lib.components.MenuBar</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines the event triggering the menu. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>eventType</name>
      <required>true</required>
      <deferred-value>
        <type>fr.exanpe.t5.lib.constants.MenuEventTypeEnum</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>VerticalMenu component.
 Items must be provided as body of this component (Loop of fr.exanpe.t5.lib.components.VerticalMenuItem).
 JavaScript : This component is bound to a class Exanpe.VerticalMenu.
 CSS : This component is bound to a class exanpe-vmenu.</description>
    <name>verticalmenu</name>
    <tag-class>fr.exanpe.t5.lib.components.VerticalMenu</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines the default active Menu item &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>defaultActiveItem</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component represents an item displayed into fr.exanpe.t5.lib.components.VerticalMenu.
 The content of the VerticalMenuItem will be filled by the body tag of the component.</description>
    <name>verticalmenuitem</name>
    <tag-class>fr.exanpe.t5.lib.components.VerticalMenuItem</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Icon of the menu &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>icon</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Title of the menu &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Target of the menu link (_blank for example) &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>target</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component represents a Tab.
 It must be nested inside a fr.exanpe.t5.lib.components.TabView component.
 The title and icons can be gathered from a resource file. The keys have to be named :
 
 ${id}-title.
 ${id}-icon.
 
 
 The content of the tab will be the body of the tag.</description>
    <name>tab</name>
    <tag-class>fr.exanpe.t5.lib.components.Tab</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Specify the icon of the tab &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>icon</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the title of the tab &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>GoogleMap component.
 Displays a Google Map centered with latitude and longitude positions provided by user.
 fr.exanpe.t5.lib.components.GMapMarker and/or fr.exanpe.t5.lib.components.GMapPolyPoint components can be nested in its body in order to
 display custom markers or draw polylines or polygons.
 
 JavaScript : This component is bound to a class Exanpe.GMap.
 CSS : This component is bound to a class exanpe-gmap.
 </description>
    <name>gmap</name>
    <tag-class>fr.exanpe.t5.lib.components.GMap</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Used with fr.exanpe.t5.lib.components.GMapPolyPoint component in order to draw a Javascript GMap Polygon instead
 of a Polyline.
 Default is false. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>polygon</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Loading Google Maps API over HTTPS or not.
 Default is false. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>secure</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Initial longitude used to center the map. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>longitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Initial latitude used to center the map. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>latitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Used with fr.exanpe.t5.lib.components.GMapPolyPoint component in order to specify numerical fractional value
 between 0.0 and 1.0 of the opacity of the line&apos;s color.
 Default is 1.0 &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>polyStrokeOpacity</name>
      <required>false</required>
      <deferred-value>
        <type>float</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>If false, prevents the map from being dragged. Default value is true. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>draggable</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>If true, displays a side bar with marker links. Default is false. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>sidebar</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Initial Map zoom level &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>zoom</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Integer</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Used with fr.exanpe.t5.lib.components.GMapPolyPoint component in order to specify the hexadecimal HTML color of
 a line.
 Default is black (#000); &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>polyStrokeColor</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the type of map you want to display. Default is ROADMAP. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>mapType</name>
      <required>false</required>
      <deferred-value>
        <type>fr.exanpe.t5.lib.constants.GMapTypeEnum</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Used with fr.exanpe.t5.lib.components.GMapPolyPoint component in order to specify the weight of the line&apos;s
 stroke in pixels.
 Default is 3. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>polyStrokeWeight</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Integer</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>AjaxLoader component.
 Load the body of this component in asynchronous mode with Ajax request.
 JavaScript : This component is bound to a class Exanpe.AjaxLoader.
 CSS : This component is bound to a class exanpe-ajaxloader.</description>
    <name>ajaxloader</name>
    <tag-class>fr.exanpe.t5.lib.components.AjaxLoader</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Decide to show the panel during the ajax load, or not. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>showPanel</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The width of the panel, in pixel. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>width</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Decide to highlight the result at the end of the loading, or not. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>highlight</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Decide if auto load the content on dom ready. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>autoLoad</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Message displayed to the user during asynchronous loading. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>message</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Image displayed during loading. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>image</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component represents a Marker displayed into a Google Map.
 It must be nested inside a fr.exanpe.t5.lib.components.GMap component.
 The title and icons can be gathered from a resource file.
 The keys have to be named :
 
 ${id}-title
 ${id}-info
 ${id}-icon
 
 </description>
    <name>gmapmarker</name>
    <tag-class>fr.exanpe.t5.lib.components.GMapMarker</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The longitude position of the marker &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>longitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the title of the item &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The latitude position of the marker &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>latitude</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Info text of the item &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>info</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the icon of the item &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>icon</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>Accordion component.
 Items must be provided as body of this component.
 JavaScript : This component is bound to a class Exanpe.Accordion.
 CSS : This component is bound to a class exanpe-acc.</description>
    <name>accordion</name>
    <tag-class>fr.exanpe.t5.lib.components.Accordion</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Specify the event to use for switching an item from a step to an other. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>eventType</name>
      <required>true</required>
      <deferred-value>
        <type>fr.exanpe.t5.lib.constants.AccordionEventTypeEnum</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The title of the accordion. If set, display a header with this title. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>title</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify if a multiple items car be opened simultaneously &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>multiple</name>
      <required>false</required>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>The duration in seconds of the animation during the accordion opening/closing &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>duration</name>
      <required>false</required>
      <deferred-value>
        <type>float</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This class defines a menu item.
 Body can contain both raw content to display a label AND a fr.exanpe.t5.lib.components.SubMenu to allow a sub menu to
 be
 displayed.
 Label can be specified through :
 
 body content
 label parameter
 a property file with key named &quot;${id}-label&quot;
 </description>
    <name>menuitem</name>
    <tag-class>fr.exanpe.t5.lib.components.MenuItem</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Specify the label of the item. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : message
</description>
      <name>label</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the rendered state of the item. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : prop
</description>
      <name>visible</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the disabled state of the item. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : prop
</description>
      <name>disabled</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>A simple border. No t:id required.
 The purpose of this component is to provide a border integrated to the graphic style.
 CSS : This component is bound to a class exanpe-bor.</description>
    <name>border</name>
    <tag-class>fr.exanpe.t5.lib.components.Border</tag-class>
    <body-content>JSP</body-content>
  </tag>
  <tag>
    <description>Display a panel allowing a user to enter a password by clicking or hovering numbers.
 This component must be enclosed into a  component.
 JavaScript : This component is bound to a class Exanpe.SecurePassword.
 CSS : This component is bound to a class exanpe-spwd.</description>
    <name>securepassword</name>
    <tag-class>fr.exanpe.t5.lib.components.SecurePassword</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines the asset displayed to clear the password field. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : asset
</description>
      <name>resetImage</name>
      <required>true</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the width of the grid where are randomly positioned the numbers (column number). &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>gridWidth</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the max length of the input password field. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>maxlength</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Integer</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the event triggering the number. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>eventType</name>
      <required>true</required>
      <deferred-value>
        <type>fr.exanpe.t5.lib.constants.SecurePasswordEventTypeEnum</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the set of characters to display in the password grid. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>characters</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the height of the grid where are randomly positioned the numbers (row number). &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>gridHeight</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defined the name of the value to set the password in the page. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>value</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>This component renders a left panel to be shown/hidden on will.
 JavaScript : This component is bound to a class Exanpe.HideablePanel
 CSS : This component is bound to a class exanpe-hdp.</description>
    <name>hideablepanel</name>
    <tag-class>fr.exanpe.t5.lib.components.HideablePanel</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Bloc always visible, on right &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>visible</name>
      <required>true</required>
      <deferred-value>
        <type>org.apache.tapestry5.Block</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Image displayed to hide the panel &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>hideImg</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Width in pixel for the hideable panel &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>hideWidth</name>
      <required>true</required>
      <deferred-value>
        <type>int</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Duration of show &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>duration</name>
      <required>true</required>
      <deferred-value>
        <type>float</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Image displayed to show the panel &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>showImg</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Bloc hideable, disposed on left &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>hideable</name>
      <required>true</required>
      <deferred-value>
        <type>org.apache.tapestry5.Block</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>TabView component. Must contain some fr.exanpe.t5.lib.components.Tab components in its body.
 JavaScript : This component is bound to a class Exanpe.TabView.
 CSS : This component is bound to a class exanpe-tab.</description>
    <name>tabview</name>
    <tag-class>fr.exanpe.t5.lib.components.TabView</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Defines the loading behavior of all hidden tab contents. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>loadAll</name>
      <required>false</required>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Defines the tab active by default. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>defaultActiveTabId</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>Slider component.
 The Slider component enables the user to adjust values in a finite range along an horizontal axe
 or a vertical axe.
 JavaScript : This component is bound to a class Exanpe.Slider.
 CSS : This component is bound to a class exanpe-slider.</description>
    <name>slider</name>
    <tag-class>fr.exanpe.t5.lib.components.Slider</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>Display the current value or not &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>displayCurrentValue</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Minimum value &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>min</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Use with ajax parameter to allow update a zone element &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>zone</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Specify the orientation of the slider &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>orientation</name>
      <required>true</required>
      <deferred-value>
        <type>fr.exanpe.t5.lib.constants.SliderOrientationTypeEnum</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Value to read or update &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : prop
</description>
      <name>value</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.Object</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Decide if the update is made in Ajax mode, or not &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>ajax</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Boolean</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>If displayCurrentValue=true, specify a default html element id to display the value into.
 By default, display into a span just upside of the slider. &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>displayId</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Image used for vertical cursor &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>verticalCursor</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Image used for horizontal cursor &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : asset
</description>
      <name>horizontalCursor</name>
      <required>false</required>
      <deferred-value>
        <type>org.apache.tapestry5.Asset</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Optional parameter for the interval : used to set the unit on the slider move.
 For example, an interval of 10 force the selection value from ten to ten. &lt;br/&gt; Allow null : true
 &lt;br/&gt; Default prefix : literal
</description>
      <name>interval</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Maximum value &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>max</name>
      <required>true</required>
      <deferred-value>
        <type>java.lang.Float</type>
      </deferred-value>
    </attribute>
  </tag>
  <tag>
    <description>Component allowing to group some fr.exanpe.t5.lib.components.MenuItem into a sub menu level.</description>
    <name>submenu</name>
    <tag-class>fr.exanpe.t5.lib.components.SubMenu</tag-class>
    <body-content>JSP</body-content>
  </tag>
  <tag>
    <description>A Tooltip component.
 The Tooltip component use different parameters to determine the message displayed to the user.
 First, we look at the &quot;message&quot; parameter; if message is bound, the content is displayed from
 properties file.
 Then, we look if &quot;blockId&quot; parameter is bound. If so, the content of the Tooltip is displayed
 from the block identified with &quot;blockId&quot;.
 Finally, if neither the &quot;message&quot; parameter, nor &quot;blockId&quot; parameter is bound, by convention, we
 use the message key consolidated from the tooltip id and the suffix &quot;-tooltip&quot;.
 JavaScript : This component is bound to a class Exanpe.Tooltip.
 CSS : This component is bound to a class exanpe-tooltip.</description>
    <name>tooltip</name>
    <tag-class>fr.exanpe.t5.lib.components.Tooltip</tag-class>
    <body-content>JSP</body-content>
    <attribute>
      <description>The id of the org.apache.tapestry5.Block used for displaying Tooltip content &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : literal
</description>
      <name>blockId</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
    <attribute>
      <description>Message used for displaying Tooltip content &lt;br/&gt; Allow null : false
 &lt;br/&gt; Default prefix : message
</description>
      <name>message</name>
      <required>false</required>
      <deferred-value>
        <type>java.lang.String</type>
      </deferred-value>
    </attribute>
  </tag>
</taglib>